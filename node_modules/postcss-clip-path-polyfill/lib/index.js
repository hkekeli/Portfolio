'use strict';

var _postcss = require('postcss');

var _postcss2 = _interopRequireDefault(_postcss);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

module.exports = _postcss2.default.plugin('postcss-clip-path-polyfill', function () {
  return function (css) {
    css.walkDecls('clip-path', function (decl) {
      var polygon = /^polygon\((.*)\)$/.exec(decl.value);
      if (!polygon) {
        return;
      }
      // SVG stores polygons in different format
      // so we convert css rule with that crappy code
      var polygons = polygon[1].split(',').map(function (pols) {
        return pols.trim().split(',').map(function (pol) {
          return pol.split(' ').map(function (unit) {
            if (unit.slice(-1) === '%') {
              return unit.replace('%', '') / 100;
            }
            return unit.replace('px', '');
          }).join(' ');
        }).join(' ');
      }).join(', ');
      var svg = String('<svg xmlns="http://www.w3.org/2000/svg">' + '<defs><clipPath id="p" clipPathUnits="objectBoundingBox">' + '<polygon points="' + polygons + '" /></clipPath></defs></svg>').replace(/%/g, '%25').replace(/</g, '%3C').replace(/>/g, '%3E').replace(/&/g, '%26').replace(/#/g, '%23');
      decl.cloneBefore({
        value: 'url(\'data:image/svg+xml;utf8,' + svg + '#p\')'
      });
    });
  };
});